
@{
    ViewData["Title"] = "Employee";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!---->



<!---->

<div class="modal fade" id="employeeModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalTitle">Add Employee</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="employeeForm" asp-action="SaveEmployee" method="post">
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    <input type="hidden" id="EmployeeId" name="Id" value="0" />

                    <div class="mb-3">
                        <label for="FullName" class="form-label">Full Name</label>
                        <input type="text" class="form-control" id="FullName" name="FullName" required>
                    </div>
                   
                    <div class="mb-3">
                        <label for="Department" class="form-label">Department</label>
                        <select class="form-select" id="Department" name="Department">
                        <option value="IT">IT</option>
                        <option value="HR">HR</option>
                        <option value="Finance & Legal">Finance & Legal</option>
                        <option value="Marketing & Sales">Marketing & Sales</option>
                        <option value="R&D and Tech. Dev.">R&D and Tech. Dev.</option>
                        </select>
                    </div>
                  
                    <div class="mb-3">
                        <label for="Location" class="form-label">Location</label>
                        <select class="form-select" id="Location" name="Location">
                            <option value="Kocaeli">Kocaeli</option>
                            <option value="Gebze">Gebze</option>
                            <option value="Gemlik">Gemlik</option>
                            <option value="Sakarya">Sakarya</option>
                        </select>
                    </div>
                         
                    <div class="mb-3">
                        <label for="PhoneNumber" class="form-label">Phone Number</label>
                        <input type="text" class="form-control" id="PhoneNumber" name="PhoneNumber">
                    </div>        
                    
                    <div class="mb-3">
                        <label for="Email" class="form-label">Email</label>
                        <input type="text" class="form-control" id="Email" name="Email">
                    </div>

                    <div class="mb-3">
                        <label for="Note" class="form-label">Note</label>
                        <input type="text" class="form-control" id="Note" name="Note">
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Status</label>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="IsActive" id="Active" value="true" checked>
                            <label class="form-check-label" for="Active">Active</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="IsActive" id="Deactive" value="false">
                            <label class="form-check-label" for="Deactive">Deactive</label>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>Employee Management</h2>
        <button type="button" class="btn btn-success" onclick="openModal(0)">
            <i class="fas fa-plus"></i> ADD EMPLOYEE
        </button>
    </div>

    <!-- Filtreleme Inputları -->
    <div class="card mb-4">
        <div class="card-body">
            <div class="row g-3">
                <div class="col-md-2">
                    <input type="text" class="form-control filter-input" placeholder="Filter ID" data-column="0">
                </div>
                <div class="col-md-2">
                    <input type="text" class="form-control filter-input" placeholder="Filter Name" data-column="1">
                </div>
                <div class="col-md-2">
                    <select class="form-select filter-select" data-column="2">
                        <option value="">All Departments</option>
                        <option value="IT">IT</option>
                        <option value="HR">HR</option>
                        <option value="Finance & Legal">Finance & Legal</option>
                        <option value="Marketing & Sales">Marketing & Sales</option>
                        <option value="R&D and Tech. Dev.">R&D and Tech. Dev.</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <select class="form-select filter-select" data-column="3">
                        <option value="">All Locations</option>
                        <option value="Kocaeli">Kocaeli</option>
                        <option value="Gebze">Gebze</option>
                        <option value="Gemlik">Gemlik</option>
                        <option value="Sakarya">Sakarya</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <select class="form-select filter-select" data-column="7">
                        <option value="">All Statuses</option>
                        <option value="Active">Active</option>
                        <option value="Deactive">Deactive</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <button class="btn btn-outline-secondary w-100" id="resetFilters">Reset Filters</button>
                </div>
            </div>
        </div>
    </div>

    <div class="table-responsive">
        <table class="table table-striped table-hover" id="employeeTable">
            <thead class="table-dark">
                <tr>
                    <th>ID</th>
                    <th>Full Name</th>
                    <th>Department</th>
                    <th>Location</th>
                    <th>PhoneNumber</th>
                    <th>Email</th>
                    <th>Note</th>
                    <th>Status</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var employee in Model)
                {
                    <tr>
                        <td>@employee.Id</td>
                        <td>@employee.FullName</td>
                        <td>@employee.Department</td>
                        <td>@employee.Location</td>
                        <td>@employee.PhoneNumber</td>
                        <td>@employee.Email</td>
                        <td>@employee.Note</td>

                        <td>
                            <span class="badge @(employee.IsActive ? "bg-success" : "bg-danger")">
                                @(employee.IsActive ? "Active" : "Deactive")
                            </span>
                        </td>
                        <td>
                            <button class="btn btn-sm btn-primary me-2" onclick="openModal(@employee.Id)">
                                <i class="bi bi-pencil-fill"></i>
                            </button>
                            <form asp-action="DeleteEmployee" method="post" class="d-inline delete-form">
                                <input type="hidden" name="id" value="@employee.Id" />
                                <button type="submit" class="btn btn-sm btn-danger">
                                    <i class="bi bi-x-lg"></i>
                                </button>
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<div class="position-fixed bottom-0 end-0 p-3" style="z-index: 11">
    <div id="toastNotification" class="toast align-items-center text-white bg-success" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="d-flex">
            <div class="toast-body" id="toastMessage">
                <!-- Mesaj buraya gelecek -->
            </div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
    </div>
</div>
<style>
    .filter-select, .filter-input {
        margin-bottom: 10px;
    }

    #resetFilters {
        height: 38px;
    }

    .card {
        margin-bottom: 20px;
    }

    </style >
@section Scripts {
    <script>
        // Toast mesajını gösteren fonksiyon
        function showToast(message, isSuccess) {
            const toast = document.getElementById('toastNotification');
            const toastMessage = document.getElementById('toastMessage');

            toast.classList.remove('bg-success', 'bg-danger');
            toast.classList.add(isSuccess ? 'bg-success' : 'bg-danger');
            toastMessage.textContent = message;

            const bootstrapToast = new bootstrap.Toast(toast);
            bootstrapToast.show();
        }

        // Sayfa yüklendiğinde URL'den mesaj parametrelerini kontrol et
        document.addEventListener('DOMContentLoaded', function() {
            // URL'den parametreleri oku
            const urlParams = new URLSearchParams(window.location.search);

            if (urlParams.has('saved')) {
                showToast('Employee saved successfully!', true);
                // Parametreyi temizle
                history.replaceState(null, '', window.location.pathname);
            }
            else if (urlParams.has('deleted')) {
                showToast('Employee deleted successfully!', true);
                // Parametreyi temizle
                history.replaceState(null, '', window.location.pathname);
            }

            // Filtreleme kodları (mevcut kodunuz)
            const table = document.getElementById('employeeTable');
            const filterInputs = document.querySelectorAll('.filter-input, .filter-select');
            const resetButton = document.getElementById('resetFilters');

            function filterTable() {
                const rows = document.querySelectorAll("tbody tr");

                rows.forEach(row => {
                    let display = true;
                    const cells = row.querySelectorAll("td");

                    filterInputs.forEach(input => {
                        const columnIndex = parseInt(input.dataset.column);
                        const filterValue = input.value.toLowerCase().trim();
                        const cellValue = cells[columnIndex].textContent.toLowerCase().trim();

                        if (input.tagName === "SELECT") {
                            if (filterValue !== "" && cellValue !== filterValue) {
                                display = false;
                            }
                        }
                        else {
                            if (filterValue !== "" && !cellValue.includes(filterValue)) {
                                display = false;
                            }
                        }
                    });

                    row.style.display = display ? "" : "none";
                });
            }

            filterInputs.forEach(input => {
                input.addEventListener('change', filterTable);
                if (input.tagName === 'INPUT') {
                    input.addEventListener('keyup', filterTable);
                }
            });

            resetButton.addEventListener('click', function() {
                filterInputs.forEach(input => {
                    input.value = '';
                });
                filterTable();
            });
        });

        // Modal açma ve veri yükleme fonksiyonu
        function openModal(id) {
            const modal = new bootstrap.Modal(document.getElementById('employeeModal'));
            const form = document.getElementById('employeeForm');

            if (id > 0) {
                fetch(`/Home/GetEmployee?id=${id}`)
                    .then(response => response.json())
                    .then(data => {
                        document.getElementById('EmployeeId').value = data.id;
                        document.getElementById('FullName').value = data.fullName || '';
                        document.getElementById('Location').value = data.location || '';
                        document.getElementById('PhoneNumber').value = data.phoneNumber || '';
                        document.getElementById('Note').value = data.note || '';
                        document.getElementById('Email').value = data.email || '';
                        document.getElementById('Department').value = data.department || 'IT';

                        if (data.isActive) {
                            document.getElementById('Active').checked = true;
                        } else {
                            document.getElementById('Deactive').checked = true;
                        }

                        document.getElementById('modalTitle').textContent = 'Edit Employee';
                        modal.show();
                    })
                    .catch(error => {
                        showToast('Error loading employee data', false);
                    });
            } else {
                form.reset();
                document.getElementById('EmployeeId').value = 0;
                document.getElementById('modalTitle').textContent = 'Add Employee';
                modal.show();
            }
        }

        // Form submit işlemi
        document.getElementById('employeeForm').addEventListener('submit', function(e) {
            e.preventDefault();

            const employeeData = {
                Id: parseInt(document.getElementById('EmployeeId').value),
                FullName: document.getElementById('FullName').value,
                Location: document.getElementById('Location').value,
                PhoneNumber: document.getElementById('PhoneNumber').value,
                Note: document.getElementById('Note').value,
                Department: document.getElementById('Department').value,
                IsActive: document.getElementById('Active').checked,
                Email: document.getElementById('Email').value
            };

            if (!employeeData.FullName) {
                showToast('Full Name is required', false);
                return;
            }

            fetch(this.action, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify(employeeData)
            }).then(response => {
                if (response.ok) {
                    window.location.href = window.location.pathname + '?saved=true';
                } else {
                    response.text().then(text => showToast('Error: ' + text, false));
                }
            }).catch(error => {
                console.error('Error:', error);
                showToast('Error saving employee', false);
            });
        });

        // Silme işlemleri için tüm formları seç ve event listener ekle
        document.querySelectorAll('form[action*="DeleteEmployee"]').forEach(form => {
            form.addEventListener('submit', function(e) {
                e.preventDefault();

                if (confirm('Are you sure you want to delete this employee?')) {
                    const formData = new FormData(this);
                    const id = formData.get('id');

                    fetch(this.action, {
                        method: 'POST',
                        headers: {
                            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                        },
                        body: formData
                    }).then(response => {
                        if (response.ok) {
                            window.location.href = window.location.pathname + '?deleted=true';
                        } else {
                            response.text().then(text => showToast('Error: ' + text, false));
                        }
                    }).catch(error => {
                        console.error('Error:', error);
                        showToast('Error deleting employee', false);
                    });
                }
            });
        });
    </script>
}